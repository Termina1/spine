// Generated by CoffeeScript 1.6.3
(function() {
  var BindingsClass, BindingsInstance;

  BindingsClass = {
    model: 'model',
    bindings: {}
  };

  BindingsInstance = {
    getModel: function() {
      return this[this.constructor.model];
    },
    applyBindings: function() {
      var field, selector, _ref, _results;
      _ref = this.constructor.bindings;
      _results = [];
      for (selector in _ref) {
        field = _ref[selector];
        this._bindModelToEl(this.getModel(), field, selector);
        _results.push(this._bindElToModel(this.getModel(), field, selector));
      }
      return _results;
    },
    _bindModelToEl: function(model, field, selector) {
      return this.el.delegate(selector, 'change', function() {
        return model[field] = $(this).val();
      });
    },
    _bindElToModel: function(model, field, selector) {
      var _this = this;
      return model.bind('change', function() {
        return _this.$(selector).val(model[field]);
      });
    }
  };

  Spine.Controller.extend(BindingsClass);

  Spine.Controller.include(BindingsInstance);

}).call(this);
